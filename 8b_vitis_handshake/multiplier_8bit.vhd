-- ==============================================================
-- Generated by Vitis HLS v2025.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2025 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity multiplier_8bit is
port (
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    A : IN STD_LOGIC_VECTOR (7 downto 0);
    B : IN STD_LOGIC_VECTOR (7 downto 0);
    P : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_rst : IN STD_LOGIC );
end;


architecture behav of multiplier_8bit is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "multiplier_8bit_multiplier_8bit,hls_ip_2025_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7s50-csga324-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=4.340000,HLS_SYN_LAT=0,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=0,HLS_SYN_LUT=43,HLS_VERSION=2025_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal mul_ln28_fu_55_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln28_fu_55_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln28_fu_55_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln28_fu_55_p00 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln28_fu_55_p10 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component multiplier_8bit_mul_8ns_8ns_16_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;



begin
    mul_8ns_8ns_16_1_1_U1 : component multiplier_8bit_mul_8ns_8ns_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        dout_WIDTH => 16)
    port map (
        din0 => mul_ln28_fu_55_p0,
        din1 => mul_ln28_fu_55_p1,
        dout => mul_ln28_fu_55_p2);




    P <= mul_ln28_fu_55_p2;
    ap_done <= ap_start;
    ap_idle <= ap_const_logic_1;
    ap_ready <= ap_start;
    mul_ln28_fu_55_p0 <= mul_ln28_fu_55_p00(8 - 1 downto 0);
    mul_ln28_fu_55_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(B),16));
    mul_ln28_fu_55_p1 <= mul_ln28_fu_55_p10(8 - 1 downto 0);
    mul_ln28_fu_55_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(A),16));
end behav;
